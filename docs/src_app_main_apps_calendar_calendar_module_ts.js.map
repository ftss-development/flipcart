{"version":3,"file":"src_app_main_apps_calendar_calendar_module_ts.js","mappings":"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","sources":["./src/app/main/apps/calendar/calendar-sidebar/calendar-event-sidebar/calendar-event-sidebar.component.ts","./src/app/main/apps/calendar/calendar-sidebar/calendar-event-sidebar/calendar-event-sidebar.component.html","./src/app/main/apps/calendar/calendar-sidebar/calendar-main-sidebar/calendar-main-sidebar.component.ts","./src/app/main/apps/calendar/calendar-sidebar/calendar-main-sidebar/calendar-main-sidebar.component.html","./src/app/main/apps/calendar/calendar.component.ts","./src/app/main/apps/calendar/calendar.component.html","./src/app/main/apps/calendar/calendar.model.ts","./src/app/main/apps/calendar/calendar.module.ts","./src/app/main/apps/calendar/calendar.service.ts"],"sourcesContent":["import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\r\n\r\nimport { EventRef } from 'app/main/apps/calendar/calendar.model';\r\nimport { CalendarService } from 'app/main/apps/calendar/calendar.service';\r\n\r\n@Component({\r\n  selector: 'app-calendar-event-sidebar',\r\n  templateUrl: './calendar-event-sidebar.component.html',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class CalendarEventSidebarComponent implements OnInit {\r\n  //  Decorator\r\n  @ViewChild('startDatePicker') startDatePicker;\r\n  @ViewChild('endDatePicker') endDatePicker;\r\n\r\n  // Public\r\n  public event: EventRef;\r\n  public isDataEmpty;\r\n  public selectLabel = [\r\n    { label: 'Business', bullet: 'primary' },\r\n    { label: 'Personal', bullet: 'danger' },\r\n    { label: 'Family', bullet: 'warning' },\r\n    { label: 'Holiday', bullet: 'success' },\r\n    { label: 'ETC', bullet: 'info' }\r\n  ];\r\n  public selectGuest = [\r\n    { name: 'Jane Foster', avatar: 'assets/images/avatars/1-small.png' },\r\n    { name: 'Donna Frank', avatar: 'assets/images/avatars/3-small.png' },\r\n    { name: 'Gabrielle Robertson', avatar: 'assets/images/avatars/5-small.png' },\r\n    { name: 'Lori Spears', avatar: 'assets/images/avatars/7-small.png' },\r\n    { name: 'Sandy Vega', avatar: 'assets/images/avatars/9-small.png' },\r\n    { name: 'Cheryl May', avatar: 'assets/images/avatars/11-small.png' }\r\n  ];\r\n  public startDateOptions = {\r\n    altInput: true,\r\n    mode: 'single',\r\n    altInputClass: 'form-control flat-picker flatpickr-input invoice-edit-input',\r\n    enableTime: true\r\n  };\r\n  public endDateOptions = {\r\n    altInput: true,\r\n    mode: 'single',\r\n    altInputClass: 'form-control flat-picker flatpickr-input invoice-edit-input',\r\n    enableTime: true\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {CoreSidebarService} _coreSidebarService\r\n   * @param {CalendarService} _calendarService\r\n   */\r\n  constructor(private _coreSidebarService: CoreSidebarService, private _calendarService: CalendarService) {}\r\n\r\n  // Public Methods\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Toggle Event Sidebar\r\n   */\r\n  toggleEventSidebar() {\r\n    this._coreSidebarService.getSidebarRegistry('calendar-event-sidebar').toggleOpen();\r\n  }\r\n\r\n  /**\r\n   * Add Event\r\n   *\r\n   * @param eventForm\r\n   */\r\n  addEvent(eventForm) {\r\n    if (eventForm.valid) {\r\n      //! Fix: Temp fix till ng2-flatpicker support ng-modal (Getting NG0100: Expression has changed after it was checked error if we use ng-model with ng2-flatpicker)\r\n      eventForm.form.value.start = this.startDatePicker.flatpickrElement.nativeElement.children[0].value;\r\n      eventForm.form.value.end = this.endDatePicker.flatpickrElement.nativeElement.children[0].value;\r\n\r\n      this._calendarService.addEvent(eventForm.form.value);\r\n      this.toggleEventSidebar();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update Event\r\n   */\r\n  updateEvent() {\r\n    this.toggleEventSidebar();\r\n    //! Fix: Temp fix till ng2-flatpicker support ng-modal\r\n    this.event.start = this.startDatePicker.flatpickrElement.nativeElement.children[0].value;\r\n    this.event.end = this.endDatePicker.flatpickrElement.nativeElement.children[0].value;\r\n    this._calendarService.postUpdatedEvent(this.event);\r\n  }\r\n\r\n  /**\r\n   * Delete Event\r\n   */\r\n  deleteEvent() {\r\n    this._calendarService.deleteEvent(this.event);\r\n    this.toggleEventSidebar();\r\n  }\r\n\r\n  // Lifecycle Hooks\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  /**\r\n   * On init\r\n   */\r\n  ngOnInit(): void {\r\n    // Subscribe to current event changes\r\n    this._calendarService.onCurrentEventChange.subscribe(response => {\r\n      this.event = response;\r\n\r\n      // If Event is available\r\n      if (Object.keys(response).length > 0) {\r\n        this.event = response;\r\n        this.isDataEmpty = false;\r\n        if (response.id === undefined) {\r\n          this.isDataEmpty = true;\r\n        }\r\n      }\r\n      // else Create New Event\r\n      else {\r\n        this.event = new EventRef();\r\n\r\n        // Clear Flatpicker Values\r\n        setTimeout(() => {\r\n          this.startDatePicker.flatpickr.clear();\r\n          this.endDatePicker.flatpickr.clear();\r\n        });\r\n        this.isDataEmpty = true;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<!-- Calendar Add/Update/Delete event modal-->\r\n<div class=\"modal-dialog sidebar-lg\">\r\n  <div class=\"modal-content p-0\">\r\n    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"toggleEventSidebar()\">\r\n      ×\r\n    </button>\r\n    <div class=\"modal-header mb-1\">\r\n      <h5 class=\"modal-title\">{{ isDataEmpty === true ? 'Add' : 'Update' }} Event</h5>\r\n    </div>\r\n    <div class=\"modal-body flex-grow-1 pb-sm-0 pb-3\">\r\n      <form\r\n        class=\"event-form needs-validation\"\r\n        (ngSubmit)=\"(eventForm.form.valid); eventForm.reset()\"\r\n        #eventForm=\"ngForm\"\r\n      >\r\n        <div class=\"form-group\">\r\n          <label for=\"title\" class=\"form-label\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            placeholder=\"Event Title\"\r\n            required\r\n            [(ngModel)]=\"event.title\"\r\n            [class.error]=\"eventForm.submitted && formNameRef.invalid\"\r\n            #formNameRef=\"ngModel\"\r\n          />\r\n          <span *ngIf=\"eventForm.submitted && formNameRef.invalid\" class=\"invalid-form\">\r\n            <small class=\"form-text text-danger\" *ngIf=\"formNameRef.errors.required\">This field is required!</small>\r\n          </span>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"select-label\" class=\"form-label\">Label</label>\r\n          <ng-select\r\n            [items]=\"selectLabel\"\r\n            name=\"selectlabel\"\r\n            [(ngModel)]=\"event.calendar\"\r\n            bindLabel=\"label\"\r\n            bindValue=\"label\"\r\n            required\r\n            [class.error]=\"eventForm.submitted && formLabelRef.invalid\"\r\n            #formLabelRef=\"ngModel\"\r\n          >\r\n            <ng-template ng-option-tmp ng-label-tmp let-item=\"item\">\r\n              <span class=\"bullet bullet-sm mr-50 bullet-{{ item.bullet }}\"></span>\r\n              {{ item.label }}\r\n            </ng-template>\r\n          </ng-select>\r\n          <span *ngIf=\"eventForm.submitted && formLabelRef.invalid\" class=\"invalid-form\">\r\n            <small class=\"form-text text-danger\" *ngIf=\"formLabelRef.errors.required\">Label is required!</small>\r\n          </span>\r\n        </div>\r\n        <div class=\"form-group position-relative\">\r\n          <label for=\"start-date\" class=\"form-label\">Start Date</label>\r\n          <ng2-flatpickr\r\n            [config]=\"startDateOptions\"\r\n            name=\"startDate\"\r\n            [setDate]=\"event.start\"\r\n            #startDatePicker\r\n            required\r\n            [class.error]=\"eventForm.submitted\"\r\n          ></ng2-flatpickr>\r\n        </div>\r\n        <div class=\"form-group position-relative\">\r\n          <label for=\"end-date\" class=\"form-label\">End Date</label>\r\n          <ng2-flatpickr\r\n            [config]=\"endDateOptions\"\r\n            name=\"endDate\"\r\n            [setDate]=\"event.end\"\r\n            #endDatePicker\r\n            required\r\n            [class.error]=\"eventForm.submitted\"\r\n          ></ng2-flatpickr>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <div class=\"custom-control custom-switch\">\r\n            <input\r\n              type=\"checkbox\"\r\n              class=\"custom-control-input allDay-switch\"\r\n              id=\"customSwitch3\"\r\n              [(ngModel)]=\"event.allDay\"\r\n              name=\"allDay\"\r\n            />\r\n            <label class=\"custom-control-label\" for=\"customSwitch3\">All Day</label>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"event-url\" class=\"form-label\">Event URL</label>\r\n          <input\r\n            type=\"url\"\r\n            [(ngModel)]=\"event.url\"\r\n            name=\"url\"\r\n            class=\"form-control\"\r\n            id=\"event-url\"\r\n            placeholder=\"https://www.google.com\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group select2-primary\">\r\n          <label for=\"event-guests\" class=\"form-label\">Add Guests</label>\r\n          <ng-select\r\n            [items]=\"selectGuest\"\r\n            name=\"selectGuest\"\r\n            [(ngModel)]=\"event.extendedProps.addGuest\"\r\n            bindLabel=\"name\"\r\n          >\r\n            <ng-template ng-option-tmp ng-label-tmp let-item=\"item\">\r\n              <div class=\"media align-items-center\">\r\n                <img\r\n                  class=\"d-block rounded-circle mr-50\"\r\n                  [src]=\"item.avatar\"\r\n                  height=\"26\"\r\n                  width=\"26\"\r\n                  [alt]=\"item.name\"\r\n                />\r\n                <div class=\"media-body\">\r\n                  <p class=\"mb-0\">{{ item.name }}</p>\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </ng-select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"event-location\" class=\"form-label\">Location</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"event-location\"\r\n            placeholder=\"Enter Location\"\r\n            [(ngModel)]=\"event.extendedProps.location\"\r\n            name=\"location\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">Description</label>\r\n          <textarea\r\n            name=\"event-description-editor\"\r\n            id=\"event-description-editor\"\r\n            class=\"form-control\"\r\n            [(ngModel)]=\"event.extendedProps.description\"\r\n            name=\"description\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group d-flex\">\r\n          <button\r\n            type=\"submit\"\r\n            class=\"btn btn-primary add-event-btn mr-1\"\r\n            *ngIf=\"isDataEmpty !== false; else addEventRef\"\r\n            (click)=\"addEvent(eventForm)\"\r\n            rippleEffect\r\n          >\r\n            Add\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-outline-secondary btn-cancel\"\r\n            data-dismiss=\"modal\"\r\n            (click)=\"toggleEventSidebar()\"\r\n            *ngIf=\"isDataEmpty !== false; else deleteEventRef\"\r\n            rippleEffect\r\n          >\r\n            Cancel\r\n          </button>\r\n          <ng-template #addEventRef>\r\n            <button type=\"submit\" class=\"btn btn-primary update-event-btn mr-1\" (click)=\"updateEvent()\" rippleEffect>\r\n              Update\r\n            </button>\r\n          </ng-template>\r\n          <ng-template #deleteEventRef>\r\n            <button class=\"btn btn-outline-danger btn-delete-event\" (click)=\"deleteEvent()\" rippleEffect>Delete</button>\r\n          </ng-template>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!--/ Calendar Add/Update/Delete event modal-->\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\r\n\r\nimport { CalendarService } from 'app/main/apps/calendar/calendar.service';\r\n\r\n@Component({\r\n  selector: 'app-calendar-main-sidebar',\r\n  templateUrl: './calendar-main-sidebar.component.html',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class CalendarMainSidebarComponent implements OnInit {\r\n  // Public\r\n  public calendarRef = [];\r\n  public tempRef = [];\r\n  public checkAll = true;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {CoreSidebarService} _coreSidebarService\r\n   * @param {CalendarService} _calendarService\r\n   */\r\n  constructor(private _coreSidebarService: CoreSidebarService, private _calendarService: CalendarService) {}\r\n\r\n  // Public Methods\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Toggle Event Sidebar\r\n   */\r\n  toggleEventSidebar() {\r\n    this._coreSidebarService.getSidebarRegistry('calendar-event-sidebar').toggleOpen();\r\n  }\r\n\r\n  /**\r\n   * Add Event\r\n   *\r\n   */\r\n  AddEvent() {\r\n    this.toggleEventSidebar();\r\n    this._coreSidebarService.getSidebarRegistry('calendar-main-sidebar').toggleOpen();\r\n    this._calendarService.createNewEvent();\r\n  }\r\n\r\n  /**\r\n   * If all checkbox are checked : returns TRUE\r\n   */\r\n  allChecked() {\r\n    return this.calendarRef.every(v => v.checked === true);\r\n  }\r\n\r\n  /**\r\n   * Checkbox Change\r\n   *\r\n   * @param event\r\n   * @param id\r\n   */\r\n  checkboxChange(event, id) {\r\n    const index = this.calendarRef.findIndex(r => {\r\n      if (r.id === id) {\r\n        return id;\r\n      }\r\n    });\r\n    this.calendarRef[index].checked = event.target.checked;\r\n    this._calendarService.calendarUpdate(this.calendarRef);\r\n    this.checkAll = this.allChecked();\r\n  }\r\n\r\n  /**\r\n   * Toggle All Checkbox\r\n   *\r\n   * @param event\r\n   */\r\n  toggleCheckboxAll(event) {\r\n    this.checkAll = event.target.checked;\r\n    if (this.checkAll) {\r\n      this.calendarRef.map(res => {\r\n        res.checked = true;\r\n      });\r\n    } else {\r\n      this.calendarRef.map(res => {\r\n        res.checked = false;\r\n      });\r\n    }\r\n    this._calendarService.calendarUpdate(this.calendarRef);\r\n  }\r\n\r\n  // Lifecycle Hooks\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  /**\r\n   * On init\r\n   */\r\n  ngOnInit(): void {\r\n    // Subscribe to Calendar changes\r\n    this._calendarService.onCalendarChange.subscribe(res => {\r\n      this.calendarRef = res;\r\n    });\r\n  }\r\n}\r\n","<!-- Main Sidebar -->\r\n<div class=\"sidebar-wrapper\">\r\n  <div class=\"card-body d-flex justify-content-center\">\r\n    <button class=\"btn btn-primary btn-toggle-sidebar btn-block\" (click)=\"AddEvent()\" rippleEffect>\r\n      <span class=\"align-middle\">Add Event</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"card-body pb-0\">\r\n    <h5 class=\"section-label mb-1\">\r\n      <span class=\"align-middle\">Filter</span>\r\n    </h5>\r\n    <div class=\"custom-control custom-checkbox mb-1\">\r\n      <input\r\n        type=\"checkbox\"\r\n        class=\"custom-control-input select-all\"\r\n        id=\"select-all\"\r\n        [checked]=\"checkAll\"\r\n        (change)=\"toggleCheckboxAll($event)\"\r\n      />\r\n      <label class=\"custom-control-label\" for=\"select-all\">View All</label>\r\n    </div>\r\n    <div class=\"calendar-events-filter\">\r\n      <div\r\n        class=\"custom-control  custom-checkbox mb-1 custom-control-{{ calendar.color }}\"\r\n        *ngFor=\"let calendar of calendarRef\"\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          (change)=\"checkboxChange($event, calendar.id)\"\r\n          class=\"custom-control-input input-filter\"\r\n          id=\"calendar-{{ calendar.id }}\"\r\n          [checked]=\"calendar.checked\"\r\n        />\r\n        <label class=\"custom-control-label\" for=\"calendar-{{ calendar.id }}\">{{ calendar.filter }}</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"mt-auto\">\r\n  <img src=\"assets/images/pages/calendar-illustration.png\" alt=\"Calendar illustration\" class=\"img-fluid\" />\r\n</div>\r\n<!--/ Main Sidebar -->\r\n","import { Component, OnInit, AfterViewInit, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { CalendarOptions, EventClickArg } from '@fullcalendar/angular';\r\n\r\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\r\nimport { CoreConfigService } from '@core/services/config.service';\r\n\r\nimport { CalendarService } from 'app/main/apps/calendar/calendar.service';\r\nimport { EventRef } from 'app/main/apps/calendar/calendar.model';\r\n\r\n@Component({\r\n  selector: 'app-calendar',\r\n  templateUrl: './calendar.component.html',\r\n  styleUrls: ['./calendar.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class CalendarComponent implements OnInit, AfterViewInit {\r\n  // Public\r\n  public slideoutShow = false;\r\n  public events = [];\r\n  public event;\r\n\r\n  public calendarOptions: CalendarOptions = {\r\n    headerToolbar: {\r\n      start: 'sidebarToggle, prev,next, title',\r\n      end: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'\r\n    },\r\n    initialView: 'dayGridMonth',\r\n    initialEvents: this.events,\r\n    weekends: true,\r\n    editable: true,\r\n    eventResizableFromStart: true,\r\n    selectable: true,\r\n    selectMirror: true,\r\n    dayMaxEvents: 2,\r\n    navLinks: true,\r\n    eventClick: this.handleUpdateEventClick.bind(this),\r\n    eventClassNames: this.eventClass.bind(this),\r\n    select: this.handleDateSelect.bind(this)\r\n  };\r\n\r\n  // Private\r\n  private _unsubscribeAll: Subject<any>;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {CoreSidebarService} _coreSidebarService\r\n   * @param {CalendarService} _calendarService\r\n   * @param {CoreConfigService} _coreConfigService\r\n   */\r\n  constructor(\r\n    private _coreSidebarService: CoreSidebarService,\r\n    private _calendarService: CalendarService,\r\n    private _coreConfigService: CoreConfigService\r\n  ) {\r\n    this._unsubscribeAll = new Subject();\r\n  }\r\n\r\n  // Public Methods\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Add Event Class\r\n   *\r\n   * @param s\r\n   */\r\n  eventClass(s) {\r\n    const calendarsColor = {\r\n      Business: 'primary',\r\n      Holiday: 'success',\r\n      Personal: 'danger',\r\n      Family: 'warning',\r\n      ETC: 'info'\r\n    };\r\n\r\n    const colorName = calendarsColor[s.event._def.extendedProps.calendar];\r\n    return `bg-light-${colorName}`;\r\n  }\r\n\r\n  /**\r\n   * Update Event\r\n   *\r\n   * @param eventRef\r\n   */\r\n  handleUpdateEventClick(eventRef: EventClickArg) {\r\n    this._coreSidebarService.getSidebarRegistry('calendar-event-sidebar').toggleOpen();\r\n    this._calendarService.updateCurrentEvent(eventRef);\r\n  }\r\n\r\n  /**\r\n   * Toggle the sidebar\r\n   *\r\n   * @param name\r\n   */\r\n  toggleSidebar(name): void {\r\n    this._coreSidebarService.getSidebarRegistry(name).toggleOpen();\r\n  }\r\n\r\n  /**\r\n   * Date select Event\r\n   *\r\n   * @param eventRef\r\n   */\r\n  handleDateSelect(eventRef) {\r\n    const newEvent = new EventRef();\r\n    newEvent.start = eventRef.start;\r\n    this._coreSidebarService.getSidebarRegistry('calendar-event-sidebar').toggleOpen();\r\n    this._calendarService.onCurrentEventChange.next(newEvent);\r\n  }\r\n\r\n  // Lifecycle Hooks\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  /**\r\n   * On init\r\n   */\r\n  ngOnInit(): void {\r\n    // Subscribe config change\r\n    this._coreConfigService.config.pipe(takeUntil(this._unsubscribeAll)).subscribe(config => {\r\n      // ! If we have zoomIn route Transition then load calendar after 450ms(Transition will finish in 400ms)\r\n      if (config.layout.animation === 'zoomIn') {\r\n        setTimeout(() => {\r\n          // Subscribe to Event Change\r\n          this._calendarService.onEventChange.subscribe(res => {\r\n            this.events = res;\r\n            this.calendarOptions.events = res;\r\n          });\r\n        }, 450);\r\n      } else {\r\n        // Subscribe to Event Change\r\n        this._calendarService.onEventChange.subscribe(res => {\r\n          this.events = res;\r\n          this.calendarOptions.events = res;\r\n        });\r\n      }\r\n    });\r\n\r\n    this._calendarService.onCurrentEventChange.subscribe(res => {\r\n      this.event = res;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Calendar's custom button on click toggle sidebar\r\n   */\r\n  ngAfterViewInit() {\r\n    // Store this to _this as we need it on click event to call toggleSidebar\r\n    let _this = this;\r\n    this.calendarOptions.customButtons = {\r\n      sidebarToggle: {\r\n        text: '',\r\n        click() {\r\n          _this.toggleSidebar('calendar-main-sidebar');\r\n        }\r\n      }\r\n    };\r\n  }\r\n}\r\n","<div class=\"content-wrapper container-xxl p-0\">\r\n  <div class=\"content-body\">\r\n    <div class=\"app-calendar overflow-hidden border\">\r\n      <div class=\"row no-gutters\">\r\n        <!-- calendar main sidebar -->\r\n        <core-sidebar\r\n          class=\"col app-calendar-sidebar flex-grow-0 overflow-hidden d-flex flex-column\"\r\n          name=\"calendar-main-sidebar\"\r\n          overlayClass=\"body-content-overlay\"\r\n          collapsibleSidebar=\"bs-gt-lg\"\r\n        >\r\n          <app-calendar-main-sidebar></app-calendar-main-sidebar>\r\n        </core-sidebar>\r\n        <!--/ calendar main sidebar -->\r\n\r\n        <!-- calendar -->\r\n        <div class=\"col position-relative\">\r\n          <div class=\"card shadow-none border-0 mb-0 rounded-0\">\r\n            <div class=\"card-body pb-0\">\r\n              <full-calendar [options]=\"calendarOptions\"></full-calendar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- calendar -->\r\n      </div>\r\n    </div>\r\n\r\n    <!-- calendar event sidebar -->\r\n    <core-sidebar\r\n      class=\"modal modal-slide-in fade event-sidebar\"\r\n      name=\"calendar-event-sidebar\"\r\n      overlayClass=\"modal-backdrop\"\r\n      hideOnEsc=\"true\"\r\n    >\r\n      <app-calendar-event-sidebar></app-calendar-event-sidebar>\r\n    </core-sidebar>\r\n    <!--/ calendar event sidebar -->\r\n  </div>\r\n</div>\r\n","export class EventRef {\r\n  id? = undefined;\r\n  url: string;\r\n  title: string = '';\r\n  start: string;\r\n  end: string;\r\n  allDay = false;\r\n  calendar: '';\r\n  extendedProps = {\r\n    location: '',\r\n    description: '',\r\n    addGuest: []\r\n  };\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { FullCalendarModule } from '@fullcalendar/angular';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport listPlugin from '@fullcalendar/list';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { Ng2FlatpickrModule } from 'ng2-flatpickr';\r\n\r\nimport { CoreCommonModule } from '@core/common.module';\r\nimport { CoreSidebarModule } from '@core/components';\r\n\r\nimport { CalendarEventSidebarComponent } from 'app/main/apps/calendar/calendar-sidebar/calendar-event-sidebar/calendar-event-sidebar.component';\r\nimport { CalendarMainSidebarComponent } from 'app/main/apps/calendar/calendar-sidebar/calendar-main-sidebar/calendar-main-sidebar.component';\r\n\r\nimport { CalendarComponent } from 'app/main/apps/calendar/calendar.component';\r\nimport { CalendarService } from 'app/main/apps/calendar/calendar.service';\r\n\r\nFullCalendarModule.registerPlugins([dayGridPlugin, timeGridPlugin, listPlugin, interactionPlugin]);\r\n\r\n// routing\r\nconst routes: Routes = [\r\n  {\r\n    path: '**',\r\n    component: CalendarComponent,\r\n    resolve: {\r\n      data: CalendarService\r\n    },\r\n    data: { animation: 'calendar' }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [CalendarComponent, CalendarEventSidebarComponent, CalendarMainSidebarComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FullCalendarModule,\r\n    RouterModule.forChild(routes),\r\n    CoreCommonModule,\r\n    CoreSidebarModule,\r\n    FormsModule,\r\n    Ng2FlatpickrModule,\r\n    NgSelectModule,\r\n    NgbModule\r\n  ],\r\n  providers: [CalendarService]\r\n})\r\nexport class CalendarModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nimport { EventRef } from 'app/main/apps/calendar/calendar.model';\r\n@Injectable()\r\nexport class CalendarService implements Resolve<any> {\r\n  // Public\r\n  public events;\r\n  public calendar;\r\n  public currentEvent;\r\n  public tempEvents;\r\n\r\n  public onEventChange: BehaviorSubject<any>;\r\n  public onCurrentEventChange: BehaviorSubject<any>;\r\n  public onCalendarChange: BehaviorSubject<any>;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {HttpClient} _httpClient\r\n   */\r\n  constructor(private _httpClient: HttpClient) {\r\n    this.onEventChange = new BehaviorSubject({});\r\n    this.onCurrentEventChange = new BehaviorSubject({});\r\n    this.onCalendarChange = new BehaviorSubject({});\r\n  }\r\n\r\n  /**\r\n   * Resolver\r\n   *\r\n   * @param {ActivatedRouteSnapshot} route\r\n   * @param {RouterStateSnapshot} state\r\n   * @returns {Observable<any> | Promise<any> | any}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\r\n    return new Promise((resolve, reject) => {\r\n      Promise.all([this.getEvents(), this.getCalendar()]).then(res => {\r\n        resolve(res);\r\n      }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get Events\r\n   */\r\n  getEvents(): Promise<any[]> {\r\n    const url = `api/calendar-events`;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this._httpClient.get(url).subscribe((response: any) => {\r\n        this.events = response;\r\n        this.tempEvents = response;\r\n        this.onEventChange.next(this.events);\r\n        resolve(this.events);\r\n      }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get Calendar\r\n   */\r\n  getCalendar(): Promise<any[]> {\r\n    const url = `api/calendar-filter`;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this._httpClient.get(url).subscribe((response: any) => {\r\n        this.calendar = response;\r\n        this.onCalendarChange.next(this.calendar);\r\n        resolve(this.calendar);\r\n      }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create New Event\r\n   */\r\n  createNewEvent() {\r\n    this.currentEvent = {};\r\n    this.onCurrentEventChange.next(this.currentEvent);\r\n  }\r\n\r\n  /**\r\n   * Calendar Update\r\n   *\r\n   * @param calendars\r\n   */\r\n  calendarUpdate(calendars) {\r\n    const calendarsChecked = calendars.filter(calendar => {\r\n      return calendar.checked === true;\r\n    });\r\n\r\n    let calendarRef = [];\r\n    calendarsChecked.map(res => {\r\n      calendarRef.push(res.filter);\r\n    });\r\n\r\n    let filteredCalendar = this.tempEvents.filter(event => calendarRef.includes(event.calendar));\r\n    this.events = filteredCalendar;\r\n    this.onEventChange.next(this.events);\r\n  }\r\n\r\n  /**\r\n   * Delete Event\r\n   *\r\n   * @param event\r\n   */\r\n  deleteEvent(event) {\r\n    return new Promise((resolve, reject) => {\r\n      this._httpClient.delete('api/calendar-events/' + event.id).subscribe(response => {\r\n        this.getEvents();\r\n        resolve(response);\r\n      }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add Event\r\n   *\r\n   * @param eventForm\r\n   */\r\n  addEvent(eventForm) {\r\n    const newEvent = new EventRef();\r\n    newEvent.url = eventForm.url;\r\n    newEvent.title = eventForm.title;\r\n    newEvent.start = eventForm.start;\r\n    newEvent.end = eventForm.end;\r\n    newEvent.allDay = eventForm.allDay;\r\n    newEvent.calendar = eventForm.selectlabel;\r\n    newEvent.extendedProps.location = eventForm.location;\r\n    newEvent.extendedProps.description = eventForm.description;\r\n    newEvent.extendedProps.addGuest = eventForm.addGuest;\r\n    this.currentEvent = newEvent;\r\n    this.onCurrentEventChange.next(this.currentEvent);\r\n    this.postNewEvent();\r\n  }\r\n\r\n  /**\r\n   * Update Event\r\n   *\r\n   * @param eventRef\r\n   */\r\n  updateCurrentEvent(eventRef) {\r\n    const newEvent = new EventRef();\r\n    newEvent.allDay = eventRef.event.allDay;\r\n    newEvent.id = parseInt(eventRef.event.id);\r\n    newEvent.url = eventRef.event.url;\r\n    newEvent.title = eventRef.event.title;\r\n    newEvent.start = eventRef.event.start;\r\n    newEvent.end = eventRef.event.end;\r\n    newEvent.calendar = eventRef.event.extendedProps.calendar;\r\n    newEvent.extendedProps.location = eventRef.event.extendedProps.location;\r\n    newEvent.extendedProps.description = eventRef.event.extendedProps.description;\r\n    newEvent.extendedProps.addGuest = eventRef.event.extendedProps.addGuest;\r\n    this.currentEvent = newEvent;\r\n    this.onCurrentEventChange.next(this.currentEvent);\r\n  }\r\n\r\n  /**\r\n   * Post New Event\r\n   */\r\n  postNewEvent() {\r\n    return new Promise((resolve, reject) => {\r\n      this._httpClient.post('api/calendar-events/', this.currentEvent).subscribe(response => {\r\n        this.getEvents();\r\n        resolve(response);\r\n      }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Post Updated Event\r\n   *\r\n   * @param event\r\n   */\r\n  postUpdatedEvent(event) {\r\n    return new Promise((resolve, reject) => {\r\n      this._httpClient.post('api/calendar-events/' + event.id, { ...event }).subscribe(response => {\r\n        this.getEvents();\r\n        resolve(response);\r\n      }, reject);\r\n    });\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}